import 'package:bookapp/core/extension/translate.dart';
import 'package:bookapp/core/utils/serves_locator.dart';
import 'package:bookapp/features/home/data/repo/home_repo_impl.dart';
import 'package:bookapp/features/home/presentation/view/widgets/CustomContainerCategoriesListView.dart';
import 'package:bookapp/features/home/presentation/view/widgets/columdetailsbody.dart';
import 'package:bookapp/features/home/presentation/view/widgets/custom_container_best_seller_list_view.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../../../../../core/utils/lang/string_language_manager.dart';
import '../../../../../core/utils/value_manager.dart';
import '../../../../../core/widgets/custom_app_bar.dart';
import '../../../../../core/widgets/custom_error_widget.dart';
import '../../../../core/utils/colors.dart';
import '../manager/best_seller_dietel_cubit/book_details_cubit.dart';
import '../manager/best_seller_dietel_cubit/book_details_state.dart';
import '../manager/categore_cubit/categories_cubit.dart';
import '../manager/categore_cubit/categories_state.dart';

class CategoriesListViewBody extends StatelessWidget {
  const CategoriesListViewBody({super.key, required this.id});

  @override
  final int id ;
  Widget build(BuildContext context) {
    return BlocProvider(
      create:
          (context) =>
          CategoriesCubit(getit.get<HomeRepoImpl>())
        ..fetchBookCategory(id ?? 0),
      child: Scaffold(
        body: SafeArea(
          child: Padding(
            padding: const EdgeInsets.all(AppSize.s3),
            child: BlocBuilder<CategoriesCubit, CategoriesState>(
              builder: (context, state) {
                if (state is CategorieTypeLoading) {
                  return Center(
                    child: CircularProgressIndicator(
                      color: ColorsManager.bluecolor,
                    ),
                  );
                } else if (state is CategoiresTypeSuccess) {
                  final book = state.books;
                  return ColumDetailsBody(
                    iamge: book.data?.products?[id].image ?? '',
                    titel: book.data?.products?[id].name ?? '',
                    pricebeforeDiss: book.data?.products?[id].price ?? '',
                    priceAfterDiss: book.data?.products?[id].priceAfterDiscount.toString() ?? '',
                    diescription: book.data?.products?[id].description ?? '',
                  );
                } else if (state is categorieTypeFailure) {
                  return Center(child: Text(state.errmassage));
                } else {
                  return const SizedBox.shrink();
                }
              },
            ),
          ),
        ),
      ),
    );
  }
}
